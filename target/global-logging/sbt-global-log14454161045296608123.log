[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\callm\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\callm\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 11.0.6)
[debug]       Load.loadUnit: plugins took 184.2042ms
[debug]       Load.loadUnit: defsScala took 0.5356ms
[debug] [Loading] Scanning directory C:\Users\callm\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\callm\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 39.4105 ms
[debug]           Load.resolveProject(global-plugins) took 68.849ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\callm\.sbt\1.0\plugins, plugins: List(<none>))) took 153.2247ms
[debug] [Loading] Done in C:\Users\callm\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 192.204ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3988ms
[debug]     Load.loadUnit(file:/C:/Users/callm/.sbt/1.0/plugins/, ...) took 393.2667ms
[debug]   Load.apply: load took 647.24ms
[debug]   Load.apply: resolveProjects took 9.3055ms
[debug]   Load.apply: finalTransforms took 117.5ms
[debug]   Load.apply: config.delegates took 13.7914ms
[debug]   Load.apply: Def.make(settings)... took 816.6365ms
[debug]   Load.apply: structureIndex took 189.9051ms
[debug]   Load.apply: mkStreams took 2.5701ms
[info] loading global plugins from C:\Users\callm\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4158.4744ms
[debug]           Load.loadUnit: plugins took 43.1201ms
[debug]           Load.loadUnit: defsScala took 0.0057ms
[debug] [Loading] Scanning directory C:\Users\callm\IdeaProjects\baking-application-4.0\project
[debug]             Load.loadUnit: mkEval took 9.8086ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\callm\IdeaProjects\baking-application-4.0\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.3075 ms
[info] loading settings for project baking-application-4-0-build from idea1.sbt ...
[debug]               Load.resolveProject(baking-application-4-0-build) took 4.9304ms
[debug]             Load.loadTransitive: finalizeProject(Project(id baking-application-4-0-build, base: C:\Users\callm\IdeaProjects\baking-application-4.0\project, plugins: List(<none>))) took 9.1493ms
[debug] [Loading] Done in C:\Users\callm\IdeaProjects\baking-application-4.0\project, returning: (baking-application-4-0-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4071.7399ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.4928ms
[debug]         Load.loadUnit(file:/C:/Users/callm/IdeaProjects/baking-application-4.0/project/, ...) took 4124.6466ms
[debug]       Load.apply: load took 4128.528ms
[debug]       Load.apply: resolveProjects took 0.2237ms
[debug]       Load.apply: finalTransforms took 15.4068ms
[debug]       Load.apply: config.delegates took 0.4809ms
[debug]       Load.apply: Def.make(settings)... took 126.5552ms
[debug]       Load.apply: structureIndex took 45.199ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\callm\IdeaProjects\baking-application-4.0\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6638.6061ms
[debug]     Load.loadUnit: defsScala took 0.005ms
[debug] [Loading] Scanning directory C:\Users\callm\IdeaProjects\baking-application-4.0
[debug]       Load.loadUnit: mkEval took 0.4428ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\callm\IdeaProjects\baking-application-4.0, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.4728 ms
[info] loading settings for project baking-application-4-0 from build.sbt ...
[debug]         Load.resolveProject(baking-application-4-0) took 130.3743ms
[debug]       Load.loadTransitive: finalizeProject(Project(id baking-application-4-0, base: C:\Users\callm\IdeaProjects\baking-application-4.0, plugins: List(<none>))) took 135.7393ms
[debug] [Loading] Done in C:\Users\callm\IdeaProjects\baking-application-4.0, returning: (baking-application-4-0)
[debug]     Load.loadUnit: loadedProjectsRaw took 2355.086ms
[debug]     Load.loadUnit: cleanEvalClasses took 24.7887ms
[debug]   Load.loadUnit(file:/C:/Users/callm/IdeaProjects/baking-application-4.0/, ...) took 9019.5328ms
[debug] Load.apply: load took 9022.7291ms
[debug] Load.apply: resolveProjects took 0.2281ms
[debug] Load.apply: finalTransforms took 43.4053ms
[debug] Load.apply: config.delegates took 0.4779ms
[debug] Load.apply: Def.make(settings)... took 133.1169ms
[debug] Load.apply: structureIndex took 29.1278ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to baking-application-4.0 (in build file:/C:/Users/callm/IdeaProjects/baking-application-4.0/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49633 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49633, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to baking-application-4.0 (in build file:/C:/Users/callm/IdeaProjects/baking-application-4.0/)
[debug] > Exec(idea-shell, None, None)
