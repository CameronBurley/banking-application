[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\callm\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\callm\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 11.0.6)
[debug]       Load.loadUnit: plugins took 604.9087ms
[debug]       Load.loadUnit: defsScala took 0.9533ms
[debug] [Loading] Scanning directory C:\Users\callm\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\callm\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 173.9383 ms
[debug]           Load.resolveProject(global-plugins) took 238.6853ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\callm\.sbt\1.0\plugins, plugins: List(<none>))) took 645.4448ms
[debug] [Loading] Done in C:\Users\callm\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 751.756ms
[debug]       Load.loadUnit: cleanEvalClasses took 4.3111ms
[debug]     Load.loadUnit(file:/C:/Users/callm/.sbt/1.0/plugins/, ...) took 1454.5936ms
[debug]   Load.apply: load took 2690.2132ms
[debug]   Load.apply: resolveProjects took 121.6798ms
[debug]   Load.apply: finalTransforms took 590.1011ms
[debug]   Load.apply: config.delegates took 128.7668ms
[debug]   Load.apply: Def.make(settings)... took 3429.756ms
[debug]   Load.apply: structureIndex took 836.5517ms
[debug]   Load.apply: mkStreams took 4.9972ms
[info] loading global plugins from C:\Users\callm\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 32594.6287ms
[debug]           Load.loadUnit: plugins took 448.0561ms
[debug]           Load.loadUnit: defsScala took 0.0045ms
[debug] [Loading] Scanning directory C:\Users\callm\IdeaProjects\baking-application-4.0\project
[debug]             Load.loadUnit: mkEval took 217.1757ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\callm\IdeaProjects\baking-application-4.0\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.2245 ms
[info] loading settings for project baking-application-4-0-build from idea2.sbt ...
[debug]               Load.resolveProject(baking-application-4-0-build) took 52.3409ms
[debug]             Load.loadTransitive: finalizeProject(Project(id baking-application-4-0-build, base: C:\Users\callm\IdeaProjects\baking-application-4.0\project, plugins: List(<none>))) took 101.7322ms
[debug] [Loading] Done in C:\Users\callm\IdeaProjects\baking-application-4.0\project, returning: (baking-application-4-0-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2147.1635ms
[debug]           Load.loadUnit: cleanEvalClasses took 126.1474ms
[debug]         Load.loadUnit(file:/C:/Users/callm/IdeaProjects/baking-application-4.0/project/, ...) took 2725.039ms
[debug]       Load.apply: load took 2730.9022ms
[debug]       Load.apply: resolveProjects took 0.2438ms
[debug]       Load.apply: finalTransforms took 193.9784ms
[debug]       Load.apply: config.delegates took 12.363ms
[debug]       Load.apply: Def.make(settings)... took 1060.7606ms
[debug]       Load.apply: structureIndex took 227.016ms
[debug]       Load.apply: mkStreams took 0.0041ms
[info] loading project definition from C:\Users\callm\IdeaProjects\baking-application-4.0\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 9400.4548ms
[debug]     Load.loadUnit: defsScala took 0.0072ms
[debug] [Loading] Scanning directory C:\Users\callm\IdeaProjects\baking-application-4.0
[debug]       Load.loadUnit: mkEval took 39.8763ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\callm\IdeaProjects\baking-application-4.0, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 38.9352 ms
[info] loading settings for project baking-application-4-0 from build.sbt ...
[debug]         Load.resolveProject(baking-application-4-0) took 434.6882ms
[debug]       Load.loadTransitive: finalizeProject(Project(id baking-application-4-0, base: C:\Users\callm\IdeaProjects\baking-application-4.0, plugins: List(<none>))) took 542.1286ms
[debug] [Loading] Done in C:\Users\callm\IdeaProjects\baking-application-4.0, returning: (baking-application-4-0)
[debug]     Load.loadUnit: loadedProjectsRaw took 1111.4754ms
[debug]     Load.loadUnit: cleanEvalClasses took 153.8453ms
[debug]   Load.loadUnit(file:/C:/Users/callm/IdeaProjects/baking-application-4.0/, ...) took 10668.3525ms
[debug] Load.apply: load took 10693.0984ms
[debug] Load.apply: resolveProjects took 0.1718ms
[debug] Load.apply: finalTransforms took 396.4094ms
[debug] Load.apply: config.delegates took 1.2713ms
[debug] Load.apply: Def.make(settings)... took 363.3032ms
[debug] Load.apply: structureIndex took 385.8006ms
[debug] Load.apply: mkStreams took 0.0035ms
[info] set current project to baking-application-4.0 (in build file:/C:/Users/callm/IdeaProjects/baking-application-4.0/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49280 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49280, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to baking-application-4.0 (in build file:/C:/Users/callm/IdeaProjects/baking-application-4.0/)
[debug] > Exec(idea-shell, None, None)
